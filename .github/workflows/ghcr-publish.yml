name: Publish to GitHub Container Registry

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      package-ecosystem: admin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set version tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "version=${{ github.event.release.name }}" >> $GITHUB_OUTPUT
          else
            echo "version=manual-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Tumblr Uploader image
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Tumblr OAuth image
        uses: docker/build-push-action@v5
        with:
          context: ./auth
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-oauth:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-oauth:${{ steps.version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Make packages public
        run: |
          # Make main package public
          gh api --method PATCH \
            /orgs/${{ github.repository_owner }}/packages/container/${{ github.event.repository.name }}/visibility \
            -f visibility="public" \
            -H "Accept: application/vnd.github.v3+json"
          
          # Make OAuth package public
          gh api --method PATCH \
            /orgs/${{ github.repository_owner }}/packages/container/${{ github.event.repository.name }}-oauth/visibility \
            -f visibility="public" \
            -H "Accept: application/vnd.github.v3+json"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }} 
